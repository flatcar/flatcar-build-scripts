#!/bin/bash

SCRIPTFOLDER="$(dirname "$(readlink -f "$0")")"

if [ "${SDK_VERSION}" = "" ] || [ "$VERSION" = "" ] || [ "$CHANNEL" = "" ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
  echo "$0:"
  echo "This script will create and push release tags in the scripts repository checked out in"
  echo "$SCRIPTFOLDER/../scripts. The repository will be cloned from github.com/flatcar/scripts.git"
  echo "if it does not exist (origin in an existing repository must point there or pushing fails or does some unwanted action)."
  echo "Set VERSION, SDK_VERSION, and CHANNEL as environment variables, e.g., VERSION=2345.3.0 SDK_VERSION=2345.0.0 CHANNEL=stable $0"
  echo
  echo "It creates tags in the form CHANNEL-VERSION for each of the three repositories. By default it fetches origin and"
  echo "creates a tag from origin/flatcar-MAJOR for each of the three repositories, with MAJOR being the first part of"
  echo "VERSION when splitting by dots."
  echo "Set the environment variable SCRIPTS_REF to specify a specific commit for the tag."
  exit 1
fi

set -euo pipefail

MAJOR="${VERSION%%.*}"

SCRIPTS_REF="${SCRIPTS_REF-origin/flatcar-$MAJOR}"

echo "Running with CHANNEL=$CHANNEL VERSION=$VERSION MAJOR=$MAJOR"
echo "SCRIPTS_REF=$SCRIPTS_REF"

REPOS="scripts"

for REPO in ${REPOS}; do
  echo "Preparing ${REPO}"
  cd "$SCRIPTFOLDER/.."
  if [ ! -d "${REPO}" ]; then
    git clone "git@github.com:flatcar/${REPO}.git"
  fi
  cd "${REPO}"
  git fetch origin
  TAG="${CHANNEL}-${VERSION}"
  [ "${REPO}" = "scripts" ] && REF="${SCRIPTS_REF}"
  echo "Deleting tag ${TAG} if it exists in ${REPO}"
  git tag -d "$TAG" || echo "No local tags deleted"
  git push --delete origin "$TAG" || echo "No remote tags deleted"
  if [ "${REPO}" = "scripts" ]; then
    if [ "${REF}" != "origin/flatcar-$MAJOR" ]; then
      echo "Error: can't find the scripts branch, you can't overwrite SCRIPTS_REF anymore"
      exit 1
    fi

    echo "Checking out scripts branch flatcar-$MAJOR to create version file"
    git checkout --force -B "flatcar-$MAJOR" "origin/flatcar-$MAJOR" || { echo "Error: could not checkout the right branch in your 'scripts' repo" ; exit 1 ; }

    if [ "$(git status --porcelain --untracked-files=no)" != "" ]; then
      echo "Error: uncommitted changes found which will be lost"
      exit 1
    fi

    git pull || { echo "Error: could not pull the branch in your 'scripts' repo" ; exit 1 ; }
    if [ "$(git log HEAD.."origin/flatcar-$MAJOR")" != "" ] || ! git diff --quiet "origin/flatcar-$MAJOR" ; then
      echo "Error: local changes in your 'scripts' repo"
      exit 1
    fi
    # Use a subshell to prevent "source" side effects
    (
      source sdk_lib/sdk_container_common.sh
      source ci-automation/ci_automation_common.sh
      create_versionfile "${SDK_VERSION}" "${VERSION}"
      SIGN=1 update_and_push_version "${TAG}" "flatcar-$MAJOR"
    )
  else
    # Tag the other repos
    echo "Tagging ${REF} as ${TAG}"
    git tag -s "${TAG}" -m "${TAG}" "${REF}"
    echo "Pushing tag"
    git push origin "${TAG}"
  fi
done

echo "Done"
